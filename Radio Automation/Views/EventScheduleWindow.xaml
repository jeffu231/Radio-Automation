<catel:Window x:Class="Radio_Automation.Views.EventScheduleWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:catel="http://schemas.catelproject.com"
             xmlns:constants="clr-namespace:Radio_Automation.Constants"
             xmlns:events="clr-namespace:Radio_Automation.Events"
             xmlns:models="clr-namespace:Radio_Automation.Models"
             xmlns:converters="clr-namespace:Radio_Automation.Converters"
             mc:Ignorable="d" 
             Height="450" Width="800" 
             WindowStartupLocation="CenterOwner"
             Background="{StaticResource BackColorBrush}">

		<Window.Resources>
			<converters:PercentageConverter x:Key="PercentageConverter" />
		</Window.Resources>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height=".1*"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Text="Use events to control actions in a cron like manner." VerticalAlignment="Center" Margin="5,0"/>
			<ListView x:Name="EventView" Grid.Row="1" ItemsSource="{Binding EventSchedule.Events}"  Margin="5,5,5,10" 
			          ItemContainerStyle="{StaticResource GridViewContainerStyle}" SelectedItem="{Binding SelectedItem}">
			<ListView.View>
				<GridView>
					<GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView},Path=ActualWidth, Converter={StaticResource PercentageConverter}, ConverterParameter=.25}">
						<GridViewColumn.Header>
							<GridViewColumnHeader>Name</GridViewColumnHeader>
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate DataType="{x:Type models:Event}">
								<WrapPanel>
									<CheckBox IsChecked="{Binding Enabled}"/>
									<TextBlock Text="{Binding Name}" TextAlignment="Left" HorizontalAlignment="Stretch" Margin="0"/>
								</WrapPanel>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView},Path=ActualWidth, Converter={StaticResource PercentageConverter}, ConverterParameter=.15}">
						<GridViewColumn.Header>
							<GridViewColumnHeader>Cron Expression</GridViewColumnHeader>
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate DataType="{x:Type models:Event}">
								<TextBlock Text="{Binding CronExpression}"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView},Path=ActualWidth, Converter={StaticResource PercentageConverter}, ConverterParameter=.12}">
						<GridViewColumn.Header>
							<GridViewColumnHeader>Demand</GridViewColumnHeader>
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate DataType="{x:Type models:Event}">
								<TextBlock Text="{Binding Demand}"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView},Path=ActualWidth, Converter={StaticResource PercentageConverter}, ConverterParameter=.14}">
						<GridViewColumn.Header>
							<GridViewColumnHeader>Type</GridViewColumnHeader>
						</GridViewColumn.Header>
						<GridViewColumn.CellTemplate>
							<DataTemplate DataType="{x:Type models:Event}">
								<TextBlock Text="{Binding EventType}"/>
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
				</GridView>
			</ListView.View>
		</ListView>
			<WrapPanel Grid.Row="2" VerticalAlignment="Center" Style="{StaticResource RowButtonContainerStyle}">
				<Button Content="New" Command="{Binding AddEventCommand}" Style="{StaticResource RowButtonStyle}"/>
				<Button Content="Edit" Command="{Binding EditEventCommand}" Style="{StaticResource RowButtonStyle}"/>
				<Button Content="Delete" Command="{Binding DeleteEventCommand}" Style="{StaticResource RowButtonStyle}"/>
				<Button Content="Open" Command="{Binding OpenScheduleCommand}" Style="{StaticResource RowButtonStyle}"/>
				<Button Content="Save" Command="{Binding SaveScheduleCommand}" Style="{StaticResource RowButtonStyle}"/>
			</WrapPanel>
			<WrapPanel Grid.Row="3" VerticalAlignment="Center" Style="{StaticResource RowButtonContainerStyle}">
				<Button Content="Ok" IsDefault="True" Command="{Binding OkCommand}" Style="{StaticResource RowButtonStyle}"/>
				<Button Content="Cancel" IsCancel="True"  Style="{StaticResource RowButtonStyle}"/>
			</WrapPanel>
		</Grid>
		
	
	
</catel:Window>
