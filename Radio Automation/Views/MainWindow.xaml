<catel:Window x:Name="RadioWindow" x:Class="Radio_Automation.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:catel="http://schemas.catelproject.com"
        xmlns:constants="clr-namespace:Radio_Automation.Constants"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converters="clr-namespace:Radio_Automation.Converters"
        xmlns:events="clr-namespace:Radio_Automation.Events"
        xmlns:views="clr-namespace:Radio_Automation.Views"
        mc:Ignorable="d"
        Height="700" Width="900" WindowStartupLocation="CenterScreen"
        CanCloseUsingEscape="False" Background="{StaticResource BackColorBrush}">
	<Window.Resources>
		<ResourceDictionary>
			<converters:PercentageConverter x:Key="PercentageConverter" />
			<converters:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
			<converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
		</ResourceDictionary>
	</Window.Resources>
	<DockPanel>
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="File" Name="FileMenu">
				<MenuItem Header="New" Command="{Binding NewPlaylistCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/NewFile_6276.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Open" Command="{Binding OpenPlaylistCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Open_6529.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Import Zara Playlist" Command="{Binding ImportZaraPlaylistCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Open_6529.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save" Command="{Binding SavePlaylistCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Save_6530.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Save As" Command="{Binding SavePlaylistAsCommand}"/>
				<MenuItem Header="Exit" Command="{Binding ExitCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=RadioWindow}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Close_6519.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="Edit" Name="EditMenu">
				<MenuItem Header="Add File" Command="{Binding AddFileCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Save_6530.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Add Folder" Command="{Binding AddFolderCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Save_6530.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Add Internet Stream" Command="{Binding AddInternetStreamCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Save_6530.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="Events" Command="{Binding EditEventScheduleCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/Save_6530.png" Width="16" Height="16"></Image>
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="Options">
				<MenuItem Header="Preferences" Command="{Binding PreferencesCommand}"/>
			</MenuItem>
			<MenuItem Header="Help">
				<MenuItem Header="View Help" Command="{Binding HelpCommand}">
					<MenuItem.Icon>
						<Image Source="/Resources;component/Icons/help.png" Width="16" Height="16" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
		</Menu>

		<StatusBar DockPanel.Dock="Bottom">
			<StatusBarItem>
				<StackPanel Orientation="Horizontal">

					<TextBlock Text="Status bar"></TextBlock>
				</StackPanel>
			</StatusBarItem>
		</StatusBar>

		<Grid DockPanel.Dock="Bottom" Height="40">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="40"/>
				<ColumnDefinition Width="40"/>
				<ColumnDefinition Width="40"/>
				<ColumnDefinition Width="40"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="40"/>
				<ColumnDefinition Width="40"/>
			</Grid.ColumnDefinitions>
			<Button Grid.Column="0" Margin="3" Command="{Binding RewindToStartCommand}">
				<Image Source="/Resources;component/Icons/control_start_blue.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			</Button>
			<Button Grid.Column="1" Margin="3" Command="{Binding PlayPauseCommand}">
				<Image Source="{Binding PlayPauseImageSource}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			</Button>
			<Button Grid.Column="2" Margin="3" Command="{Binding StopPlaybackCommand}">
				<Image Source="/Resources;component/Icons/control_stop_blue.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			</Button>
			<Button Grid.Column="3" Margin="3" Command="{Binding ForwardToEndCommand}">
				<Image Source="/Resources;component/Icons/control_end_blue.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			</Button>
			<Button Grid.Column="5" Margin="3" Command="{Binding PlayTemperatureCommand}">
				<Image Source="/Resources;component/Icons/arrow_switch.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			</Button>
			<Button Grid.Column="6" Margin="3" Command="{Binding ShuffleCommand}">
				<Image Source="/Resources;component/Icons/arrow_switch.png" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			</Button>
		</Grid>
		
		<Grid x:Name="GridContainer">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition x:Name="RightColumn" Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition x:Name="ListRow" Height="100*"/>
			</Grid.RowDefinitions>
			<GroupBox Grid.Column="0" Grid.Row="0" Name="NowPlaying" Header="Now Playing" HorizontalContentAlignment="Stretch" Margin="5">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<views:TrackInfo DataContext="{Binding CurrentTrack}" Grid.Row="0"/>

					<Slider Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" Margin="10,5,0,5"  
					        Value="{Binding Volume}"
					        Minimum="0"
					        Maximum="100">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="ValueChanged">
								<i:InvokeCommandAction Command="{Binding VolumeChangedCommand}"></i:InvokeCommandAction>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Slider>
					<Grid Grid.Column="0" Grid.Row="1" VerticalAlignment="Center">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid Grid.Column="0" Margin="2,0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<TextBlock Grid.Row="0" Text="Remaining Time"/>
							<TextBlock Grid.Row="1" Text="{Binding RemainingTime, StringFormat={x:Static constants:Formatters.DurationFormat}}" FontSize="20" TextAlignment="Center"/>
						</Grid>
						<Grid Grid.Column="1" Margin="2,5,2,0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ProgressBar Grid.Row="0" HorizontalContentAlignment="Stretch" Height="15" Minimum="0" Maximum="100" Value="{Binding LeftLevel}" Margin="0,0,0,2"/>
							<ProgressBar Grid.Row="1" HorizontalContentAlignment="Stretch" Height="15" Minimum="0" Maximum="100" Value="{Binding RightLevel}"></ProgressBar>
						</Grid>
						<Grid Grid.Column="2" Margin="2,0">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<TextBlock Grid.Row="0"  Text="End Time" VerticalAlignment="Center" TextAlignment="Center"/>
							<TextBlock Grid.Row="1" Text="{Binding TrackEndTime, StringFormat={x:Static constants:Formatters.TimeFormat}}" Visibility="{Binding CurrentTrack, Converter={StaticResource NotNullToVisibilityConverter}}"
							           VerticalAlignment="Center" FontSize="20" TextAlignment="Center" MinWidth="75"/>
							<TextBlock Grid.Row="1" Text="00:00:00" Visibility="{Binding CurrentTrack, Converter={StaticResource NullToVisibilityConverter}}" 
							           VerticalAlignment="Center" FontSize="20" TextAlignment="Center" MinWidth="75"/>
						</Grid>
					</Grid>

				</Grid>
			</GroupBox>
			<GroupBox Grid.Column="1" Grid.Row="0" Name="UpNext" Header="Up Next" HorizontalContentAlignment="Stretch" Margin="5">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<views:TrackInfo DataContext="{Binding NextTrack}" Grid.Row="0"/>
					<Border Grid.Row="1" BorderThickness="1" BorderBrush="{StaticResource ForeColorBrush}" Padding="5,3,5,3">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width=".33*"/>
								<ColumnDefinition Width=".33*"/>
								<ColumnDefinition Width=".33*"/>
							</Grid.ColumnDefinitions>
							<TextBlock Name="DateTime" Grid.Column="0" Text="{Binding Clock.CurrentDateTime, StringFormat={x:Static constants:Formatters.DateTimeFormat}}" VerticalAlignment="Center"/>
							<WrapPanel Grid.Column="1" HorizontalAlignment="Center">
								<Label Content="Temp" VerticalAlignment="Center"/>
								<TextBlock Name="Temperature" VerticalAlignment="Center" Text="{Binding Temperature, StringFormat={}{0:##0} F}"/>
							</WrapPanel>
							<WrapPanel Grid.Column="2" HorizontalAlignment="Center">
								<Label Content="Humidity"  VerticalAlignment="Center"/>
								<TextBlock Name="Humidity" VerticalAlignment="Center" Text="{Binding Humidity, StringFormat={}{0:##0}%}"/>
							</WrapPanel>
						</Grid>
					</Border>
				</Grid>
			</GroupBox>
			<Grid Grid.Row="1" Grid.Column="1" Margin="0,5,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBlock Text="Total Time: " Grid.Column="0"/>
				<TextBlock Grid.Column="1" Text="{Binding Playlist.TotalTime, StringFormat={x:Static constants:Formatters.LongDurationFormat}}"/>
				<TextBlock Text="Tracks: " Grid.Column="2" Margin="5,0"/>
				<TextBlock Text="{Binding Playlist.Tracks.Count}" Grid.Column="3"/>
			</Grid>

			<ListView x:Name="EventView" Grid.Column="0" Grid.Row="2" 
			          ItemsSource="{Binding PendingEvents}"  Margin="5,5,5,10"
			          ItemContainerStyle="{StaticResource GridViewContainerStyle}">
				<ListView.View>
					<GridView>
						<GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView},Path=ActualWidth, Converter={StaticResource PercentageConverter}, ConverterParameter=.62}">
							<GridViewColumn.Header>
								<GridViewColumnHeader>Name</GridViewColumnHeader>
							</GridViewColumn.Header>
							<GridViewColumn.CellTemplate>
								<DataTemplate DataType="{x:Type events:PendingEvent}">
									<TextBlock Text="{Binding Event.Name}" TextAlignment="Left" HorizontalAlignment="Stretch" Margin="0"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView},Path=ActualWidth, Converter={StaticResource PercentageConverter}, ConverterParameter=.18}">
							<GridViewColumn.Header>
								<GridViewColumnHeader>Demand</GridViewColumnHeader>
							</GridViewColumn.Header>
							<GridViewColumn.CellTemplate>
								<DataTemplate DataType="{x:Type events:PendingEvent}">
									<TextBlock Text="{Binding Event.Demand}"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
						<GridViewColumn Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView},Path=ActualWidth, Converter={StaticResource PercentageConverter}, ConverterParameter=.18}">
							<GridViewColumn.Header>
								<GridViewColumnHeader>Start</GridViewColumnHeader>
							</GridViewColumn.Header>
							<GridViewColumn.CellTemplate>
								<DataTemplate DataType="{x:Type events:PendingEvent}">
									<TextBlock Text="{Binding NextScheduledTime, StringFormat={x:Static constants:Formatters.TimeFormat}}"/>
								</DataTemplate>
							</GridViewColumn.CellTemplate>
						</GridViewColumn>
					</GridView>
				</ListView.View>
				
			</ListView>

			<ListView x:Name="PlaylistView" Grid.Column="1" Grid.Row="2" 
			          ItemsSource="{Binding Playlist.Tracks}"  Margin="0,5,5,10" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
				<ListView.ItemContainerStyle>
					<Style TargetType="{x:Type ListViewItem}">
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					</Style>
				</ListView.ItemContainerStyle>
				<ListView.ItemTemplate>
					<DataTemplate>
						<views:TrackView DataContext="{Binding}"/>
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>
		</Grid>
	</DockPanel>
</catel:Window>
